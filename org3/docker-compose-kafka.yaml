# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '3'

networks:
  nath:
    external: true

services:

  ca_org3:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca_org3
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org3-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/5a5bfa5c34b66cba04b45c052d0132cd8ca5a45b98951634893a6a006b7e630d_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org3-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/5a5bfa5c34b66cba04b45c052d0132cd8ca5a45b98951634893a6a006b7e630d_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org3/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg3
    deploy:
      placement:
        constraints: [node.hostname==ip-172-31-12-49]
    networks:
      - nath

  orderer2:
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      # kafka
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ../crypto-config/ordererOrganizations/orderer/orderers/orderer2.orderer/msp:/var/hyperledger/orderer/msp
      - ../crypto-config/ordererOrganizations/orderer/orderers/orderer2.orderer/tls/:/var/hyperledger/orderer/tls
    ports:
      - 9050:8050
    container_name: orderer1
    hostname: orderer1
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      - kafka5
    deploy:
      placement:
        constraints: [node.hostname==ip-172-31-12-49]
    networks:
      - nath

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "9984:5984"
    deploy:
      placement:
        constraints: [node.hostname==ip-172-31-12-49]
    networks:
    - nath

  peer0_org3:
    container_name: peer0_org3
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ID=peer0_org3
      - CORE_PEER_ADDRESS=peer0_org3:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1_org3:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0_org3:7051
      - CORE_PEER_LOCALMSPID=Org3MSP
      # -- Common --
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=nath
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # -- About Couchdb  --
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/org3/peers/peer0.org3/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/org3/peers/peer0.org3/tls:/etc/hyperledger/fabric/tls
    ports:
        - 11051:7051
        - 11053:7053
    depends_on:
      - couchdb0
    deploy:
      placement:
        constraints: [node.hostname==ip-172-31-12-49]
    networks:
    - nath

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "10984:5984"
    deploy:
      placement:
        constraints: [node.hostname==ip-172-31-12-49]
    networks:
    - nath

  peer1_org3:
    container_name: peer1_org3
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ID=peer1_org3
      - CORE_PEER_ADDRESS=peer1_org3:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1_org3:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0_org3:7051
      - CORE_PEER_LOCALMSPID=Org3MSP
      # -- Common --
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=nath
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # -- About Couch --
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/org3/peers/peer1.org3/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/org3/peers/peer1.org3/tls:/etc/hyperledger/fabric/tls
    ports:
      - 12051:7051
      - 12053:7053
    depends_on:
      - couchdb1
    deploy:
      placement:
        constraints: [node.hostname==ip-172-31-12-49]
    networks:
    - nath
